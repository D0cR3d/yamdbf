{"version":3,"sources":["command/base/Shortcuts.ts"],"names":[],"mappings":"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","file":"Shortcuts.js","sourcesContent":["import { Message } from '../../types/Message';\r\nimport { Command } from '../Command';\r\nimport { localizable, using } from '../CommandDecorators';\r\nimport { ResourceLoader } from '../../types/ResourceLoader';\r\nimport { BaseStrings as s } from '../../localization/BaseStrings';\r\nimport { Middleware } from '../middleware/Middleware';\r\nimport { Util } from 'discord.js';\r\nconst { resolve, expect, } = Middleware;\r\n\r\nexport default class extends Command\r\n{\r\n\tpublic constructor()\r\n\t{\r\n\t\tsuper({\r\n\t\t\tname: 'shortcuts',\r\n\t\t\tdesc: 'Configure or list command shortcuts',\r\n\t\t\tusage: `<prefix>shortcuts ['get'|'set'|'remove'] [name] [...content]`,\r\n\t\t\tinfo: `Shortcuts allow creating and calling preconfigured command+argument sets, or simple aliases\r\n\r\nExample:\r\n\t<prefix>shortcuts set h help\r\n\r\nWhich would set the shortcut \"h\" to call the command \"help\"\r\n\r\n\r\nShortcuts also allow substitution tokens for argument interpolation.\r\n\r\nExample:\r\n\t<prefix>shortcuts set add eval %s + %s\r\n\r\nWhich would set the shortcut \"add\", to add two numbers --\r\n\"<prefix>add 2 3\", which becomes \"<prefix>eval 2 + 3\"\r\n\r\nOf course the eval command is owner-only, but this should give you an idea of how shortcuts work`,\r\n\t\t\tcallerPermissions: ['ADMINISTRATOR']\r\n\t\t});\r\n\t}\r\n\r\n\t@using(resolve(`action: ['get', 'set', 'remove'], name: String, ...content: String`))\r\n\t@using(function(message, args: string[])\r\n\t{\r\n\t\tif (args[0])\r\n\t\t{\r\n\t\t\tif (args[0] === 'set')\r\n\t\t\t\treturn expect(`action: ['get', 'set', 'remove'], name: String, ...content: String`)\r\n\t\t\t\t\t.call(this, message, args);\r\n\r\n\t\t\telse\r\n\t\t\t\treturn expect(`action: ['get', 'set', 'remove'], name: String`)\r\n\t\t\t\t\t.call(this, message, args);\r\n\t\t}\r\n\t\telse return [message, args];\r\n\t})\r\n\t@localizable\r\n\tpublic async action(message: Message, [res, action, name, content]: [ResourceLoader, string, string, string]): Promise<any>\r\n\t{\r\n\t\tif (!action) return this.listShortcuts(message, res);\r\n\t\telse if (action === 'set') return this.setShortcut(message, res, name, content);\r\n\t\telse if (action === 'get') return this.getShortcut(message, res, name);\r\n\t\telse if (action === 'remove') return this.removeShortcut(message, res, name);\r\n\t}\r\n\r\n\t/**\r\n\t * List command shortcuts\r\n\t */\r\n\tprivate async listShortcuts(message: Message, res: ResourceLoader): Promise<void>\r\n\t{\r\n\t\tconst shortcuts: { [name: string]: string } = await message.guild.storage.settings.get('shortcuts') || {};\r\n\t\tconst names: string[] = Object.keys(shortcuts);\r\n\r\n\t\tlet output: string;\r\n\r\n\t\tif (names.length === 0) output = res(s.CMD_SHORTCUTS_ERR_NO_SHORTCUTS);\r\n\t\telse output = res(s.CMD_SHORTCUTS_LIST, { names: names.join(', ') });\r\n\r\n\t\tthis.respond(message, output);\r\n\t}\r\n\r\n\t/**\r\n\t * Set command shortcut content\r\n\t */\r\n\tprivate async setShortcut(message: Message, res: ResourceLoader, name: string, content: string): Promise<any>\r\n\t{\r\n\t\tconst shortcuts: { [name: string]: string } = await message.guild.storage.settings.get('shortcuts') || {};\r\n\t\tif (Object.keys(shortcuts).length >= 50)\r\n\t\t\treturn this.respond(message, res(s.CMD_SHORTCUTS_ERR_MAX_SHORTCUTS));\r\n\r\n\t\tif (content.length > 500)\r\n\t\t\treturn this.respond(message, res(s.CMD_SHORTCUTS_ERR_SET_LENGTH));\r\n\r\n\t\tawait message.guild.storage.settings.set(`shortcuts.${name}`, content);\r\n\r\n\t\tcontent = Util.escapeMarkdown(content, true);\r\n\t\treturn this.respond(message, res(s.CMD_SHORTCUTS_SET_SUCCESS, { name, content }));\r\n\t}\r\n\r\n\t/**\r\n\t * Get command shortcut content\r\n\t */\r\n\tprivate async getShortcut(message: Message, res: ResourceLoader, name: string): Promise<any>\r\n\t{\r\n\t\tconst shortcuts: { [name: string]: string } = await message.guild.storage.settings.get('shortcuts') || {};\r\n\t\tif (!shortcuts[name])\r\n\t\t\treturn this.respond(message, res(s.CMD_SHORTCUTS_ERR_MISSING, { name }));\r\n\r\n\t\tconst content: string = Util.escapeMarkdown(shortcuts[name], true);\r\n\t\treturn this.respond(message, res(s.CMD_SHORTCUTS_GET_CONTENT, { name, content }));\r\n\t}\r\n\r\n\t/**\r\n\t * Remove a command shortcut\r\n\t */\r\n\tprivate async removeShortcut(message: Message, res: ResourceLoader, name: string): Promise<any>\r\n\t{\r\n\t\tconst shortcuts: { [name: string]: string } = await message.guild.storage.settings.get('shortcuts') || {};\r\n\t\tif (!shortcuts[name])\r\n\t\t\treturn this.respond(message, res(s.CMD_SHORTCUTS_ERR_MISSING, { name }));\r\n\r\n\t\tawait message.guild.storage.settings.remove(`shortcuts.${name}`);\r\n\t\treturn this.respond(message, res(s.CMD_SHORTCUTS_REMOVE_SUCCESS, { name }));\r\n\t}\r\n}\r\n"],"sourceRoot":"../../../src"}