{"version":3,"sources":["command/base/usagecontrol/Blacklist.ts"],"names":[],"mappings":"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","file":"Blacklist.js","sourcesContent":["import { User, GuildMember } from 'discord.js';\nimport { Command } from '../../Command';\nimport { Message } from '../../../types/Message';\nimport { Middleware } from '../../middleware/Middleware';\nimport { using, localizable } from '../../CommandDecorators';\nimport { ResourceProxy } from '../../../types/ResourceProxy';\nconst { resolve, expect } = Middleware;\n\nexport default class extends Command\n{\n\tpublic constructor()\n\t{\n\t\tsuper({\n\t\t\tname: 'blacklist',\n\t\t\tdesc: 'Blacklist a user from calling commands',\n\t\t\taliases: ['bl'],\n\t\t\tusage: `<prefix>blacklist <action> <user> ['global']`,\n\t\t\tinfo: 'If global, this will block the user from calling commands in ANY server and DMs',\n\t\t\tcallerPermissions: ['ADMINISTRATOR']\n\t\t});\n\t}\n\n\t@using(resolve(`action: ['add', 'remove'], user: User`))\n\t@using(expect(`action: ['add', 'remove'], user: User`))\n\t@localizable\n\tpublic async action(message: Message, [res, action, user, global]: [ResourceProxy, string, User, string]): Promise<Message | Message[]>\n\t{\n\t\tif (action === 'add')\n\t\t{\n\t\t\tif (user.id === message.author.id)\n\t\t\t\treturn message.channel.send(res.CMD_BLACKLIST_ERR_NOSELF());\n\n\t\t\tif (user.bot) return message.channel.send(res.CMD_BLACKLIST_ERR_NOBOT());\n\n\t\t\tif (global === 'global')\n\t\t\t{\n\t\t\t\tif (!this.client.isOwner(message.author))\n\t\t\t\t\treturn message.channel.send(res.CMD_BLACKLIST_ERR_OWNERONLY());\n\n\t\t\t\tconst globalBlacklist: any = await this.client.storage.get('blacklist') || {};\n\t\t\t\tif (globalBlacklist[user.id])\n\t\t\t\t\treturn message.channel.send(res.CMD_BLACKLIST_ERR_ALREADYGLOBAL());\n\n\t\t\t\tawait this.client.storage.set(`blacklist.${user.id}`, true);\n\t\t\t\tthis.client.emit('blacklistAdd', user, true);\n\t\t\t\treturn message.channel.send(res.CMD_BLACKLIST_GLOBALSUCCESS({ user: user.tag }));\n\t\t\t}\n\n\t\t\tlet member: GuildMember;\n\t\t\ttry { member = await message.guild.fetchMember(user); }\n\t\t\tcatch (err) {}\n\n\t\t\tif (member && member.permissions.has('ADMINISTRATOR'))\n\t\t\t\treturn message.channel.send(res.CMD_BLACKLIST_ERR_BADTARGET());\n\n\t\t\tconst guildBlacklist: any = await message.guild.storage.settings.get('blacklist') || {};\n\t\t\tif (guildBlacklist[user.id])\n\t\t\t\treturn message.channel.send(res.CMD_BLACKLIST_ERR_ALREADYBLACKLISTED());\n\n\t\t\tawait message.guild.storage.settings.set(`blacklist.${user.id}`, true);\n\t\t\tthis.client.emit('blacklistAdd', user, false);\n\t\t\treturn message.channel.send(res.CMD_BLACKLIST_SUCCESS({ user: user.tag }));\n\t\t}\n\t\telse if (action === 'remove')\n\t\t{\n\t\t\tif (global === 'global')\n\t\t\t{\n\t\t\t\tif (!this.client.isOwner(message.author))\n\t\t\t\t\treturn message.channel.send(res.CMD_WHITELIST_ERR_OWNERONLY());\n\n\t\t\t\tconst globalBlacklist: any = await this.client.storage.get('blacklist') || {};\n\t\t\t\tif (!globalBlacklist[user.id])\n\t\t\t\t\treturn message.channel.send(res.CMD_WHITELIST_ERR_NOTGLOBAL());\n\n\t\t\t\tawait this.client.storage.remove(`blacklist.${user.id}`);\n\t\t\t\tthis.client.emit('blacklistRemove', user, true);\n\t\t\t\treturn message.channel.send(res.CMD_WHITELIST_GLOBALSUCCESS({ user: user.tag }));\n\t\t\t}\n\n\t\t\tconst guildBlacklist: any = await message.guild.storage.settings.get('blacklist') || {};\n\t\t\tif (!guildBlacklist[user.id])\n\t\t\t\treturn message.channel.send(res.CMD_WHITELIST_ERR_NOTBLACKLISTED());\n\n\t\t\tawait message.guild.storage.settings.remove(`blacklist.${user.id}`);\n\t\t\tthis.client.emit('blacklistRemove', user, false);\n\t\t\treturn message.channel.send(res.CMD_WHITELIST_SUCCESS({ user: user.tag }));\n\t\t}\n\t}\n}\n"],"sourceRoot":"../../../../src"}